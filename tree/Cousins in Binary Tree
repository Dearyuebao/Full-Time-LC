//很简单bfs就能解
//就记录一下
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        Map<Integer, TreeNode> map = new HashMap<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()) {
            int size = q.size();
            Set<Integer> set = new HashSet<>();
            for(int i = 0; i < size; i++) {
                TreeNode parent = q.poll();
                if(parent.left != null) {
                    map.put(parent.left.val, parent);
                    q.add(parent.left);
                    set.add(parent.left.val);
                }
                if(parent.right != null) {
                    map.put(parent.right.val, parent);
                    q.add(parent.right);
                    set.add(parent.right.val);
                }
            }
            if(set.contains(x) && set.contains(y)) {
                if(map.get(x) != map.get(y)) return true;
            }
            set.clear();
        }
        return false;
        
    }
}
