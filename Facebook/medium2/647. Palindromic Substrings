//我的extend odd even做法 感觉写的不太好
class Solution {
    public int countSubstrings(String s) {
        int count = 0;
        for(int i = 0; i < s.length(); i++) {
            count += extendOdd(s, i);
            if(i != s.length() - 1) {
                count+= extendEven(s, i, i + 1);
            }
        }
        return count;
    }
    public int extendOdd(String s, int i) {
        int count = 1;
        int left = i - 1, right = i + 1;
        while(left >= 0 && right < s.length()) {
            if(s.charAt(left) == s.charAt(right)) {
                count++;
                left--;
                right++;
            } else break;
        }
        return count;
    }
    public int extendEven(String s, int i, int j) {
        if(s.charAt(i) != s.charAt(j)) return 0;
        int left = i - 1, right = j + 1, count = 1;
        while(left >= 0 && right < s.length()) {
            if(s.charAt(left) == s.charAt(right)) {
                count++;
                left--;
                right++;
            } else break;
        }
        return count;
    }
}

//参考discussion 一样的想法 但是写的要简洁多了
int count = 0;
    
    public int countSubstrings(String s) {
        if (s == null || s.length() == 0) return 0;
        
        for (int i = 0; i < s.length(); i++) { // i is the mid point
            extendPalindrome(s, i, i); // odd length;
            extendPalindrome(s, i, i + 1); // even length
        }
        
        return count;
    }
    
    private void extendPalindrome(String s, int left, int right) {
        while (left >=0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            count++; left--; right++;
        }
    }
