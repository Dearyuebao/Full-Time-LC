//有一个清晰的思路就可以做了
//一种向上走 先走右边 右边不能走了走下边；另一种向下走 先走下边 下边不能走了走右边
class Solution {
    public int[] findDiagonalOrder(int[][] matrix) {
        if(matrix.length == 0 || matrix[0].length == 0) return new int[]{};
        int i = 0, j = 0, m = matrix.length, n = matrix[0].length;
        int[] res = new int[m * n];
        int num = 0;
        boolean up = true;
        for(int time = 0; time < m + n -1; time++) {
            if(up) {
                while(i >= 0 && j < n) {
                    res[num++] = matrix[i--][j++];
                }
                if(j < n) i++;
                else {
                    i += 2; j--;
                }
                up = !up;
                
            } else {
                while(i < m && j >= 0) {
                    res[num++] = matrix[i++][j--];
                }
                if(i < m) j++;
                else {
                    i--; j += 2;
                }
                up = !up;
                
            }
        }
        
        
        return res;
    }
}
