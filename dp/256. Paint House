class Solution {
    public int minCost(int[][] costs) {
        if(costs.length == 0 || costs[0].length == 0) return 0;
        int n = costs.length;
        int[][] dp = new int[n][3];
        for(int i = 0; i < costs[0].length; i++) {
            dp[0][i] = costs[0][i];
        }
        for(int i = 1; i < n; i++) {
            dp[i][0] = Math.min(dp[i - 1][1], dp[i - 1][2]) + costs[i][0];
            dp[i][1] = Math.min(dp[i - 1][0], dp[i - 1][2]) + costs[i][1];
            dp[i][2] = Math.min(dp[i - 1][0], dp[i - 1][1]) + costs[i][2];
        }
        int res = Math.min(dp[n - 1][0], dp[n - 1][1]);
        res = Math.min(res, dp[n - 1][2]);
        return res;
    }
}
