//和Longest Substring with At Most 2 Distinct Characters那道题一模一样
//都是用的模版 就是需要考虑到k == 0 的corner case
class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if(s.length() <= k) return s.length();
        if(k == 0) return 0;
        int max = 0, start = 0, end = 0;
        Map<Character, Integer> map = new HashMap<>();
        while(end < s.length()) {
            if(!map.containsKey(s.charAt(end))) {
                if(map.size() >= k) {
                    char key = ' ';
                    int index = Integer.MAX_VALUE;
                    for(char each:map.keySet()) {
                        if(map.get(each) < index) {
                            key = each;
                            index = map.get(each);
                        }
                    }
                    map.remove(key);
                    start = index + 1;
                }
            }
            map.put(s.charAt(end), end);
            max = Math.max(max, end - start + 1);
            end++;
        }
        return max;
    }
}
