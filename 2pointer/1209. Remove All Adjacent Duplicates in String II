//很值得学习的一道题
//大佬的做法 双指针 一个读 一个写
    public String removeDuplicates(String s, int k) {
        int read = 0, write = 0;
        char[] c = s.toCharArray();//修改数组/string
        int[] count = new int[s.length()];//记录有多少个连等
        for(read = 0; read < s.length(); read++, write++) {
            c[write] = c[read];
            count[write] = (write > 0 && c[write - 1] == c[read])? count[write - 1] + 1:1;//计算连等
            if(count[write] == k) write -= k;//删除操作
        }
        return new String(c, 0, write);
    }
    
    //和我的recursive 复杂度很高
    class Solution {
    //s.length()  - x = k
    public String removeDuplicates(String s, int k) {
        int removeIndex = Integer.MAX_VALUE;
        for(int i = 0; i < s.length() - k + 1; i++) {
            if(same(s.substring(i, i + k))) {
                removeIndex = i;
                return removeDuplicates(s.substring(0, removeIndex) + s.substring(removeIndex + k), k);
            }
        }
        return s;
    }
    public boolean same(String s) {
        char c = s.charAt(0);
        for(int i = 1; i < s.length(); i++) {
            if(s.charAt(i) != c) return false;
        }
        return true;
    }
}
